{
	"page": {
		"title": "MUGEN State Controller",
		"subtitle": "Projectile",
		"target": "実行者自身",
		"category": ["攻撃", "飛び道具"],
		"version": "2002.04.14",
		"update": "2016.12.21",
		"type": "document",
		"level": "3"
	},

	"state": "Projectile",
	"description": "<p>飛び道具を出現させます。独自のパラメータ以外に<code>HitDef</code>の全てのパラメータを設定可能。</p><p>ちなみに、飛び道具でもやられ判定を付けないと相殺しません。</p><p>割と細かい設定が可能ですが、それでもあまり複雑な動きはできません。</p><p>このステートコントローラーで役不足な場合は<code>Helper</code>を使用します。</p><p>なお、<code>Win</code>ではプレイヤーへの<code>PalFX</code>の影響を受けてしまいます(バグ？)。<code>OwnPal=1</code>を指定してもエラーとはなりませんが、無効です。</p><p>ちなみに、<code>Helper</code>が出した<code>Projectile</code>も、本体管理となります。当然、パレットも本体と共用です。</p>",
	"category": "state",

	"associated_trigger": ["NumProj", "NumProjID"],
	"associated_state": [""],


  "version": [
    {"no": "Version1.1から", "content": "<code>ReMapPal</code>が追加されました。"},
    {"no": "Version1.1から", "content": "PosTypeにNが追加されました。"},
    {"no": "Version1.1から", "content": "※未検証 PosTypeのL,R,F,B,Nが正しく動作しない。"},
    {"no": "Version1.0から", "content": "※未検証 PosTypeのL,Rの挙動がおかしい。"}
  ],

	"parameter": [
		{
			"parameter": "Attr",
			"value": ["反撃属性1, 反撃属性2, ..."],
			"type": ["string", "string", "..."],
			"description": "<p>攻撃の属性を指定します。</p><p>属性1には、「S」「C」「A」(順に立ち、屈み、空中)のいずれかを指定します。</p><p>属性2には、「N」「S」「H」「A」（順に通常、必殺、超必殺、すべて）と、「A」「T」「P」（同じく攻撃、投げ、飛び道具）を組み合わせて指定します。</p><p>例えば立ちパンチなどなら attr = S,NA、空中で飛び道具を出す超必殺技なら attr = A,HP と記述します。</p><p>空中判定になる地上攻撃(リープアタック等)は、空中扱いにしましょう。ただし、AirやOffsetで見た目のみ浮いている場合は、地上扱いでもかまいません。とりあえず、StateTypeと同じにしておけば、問題ないでしょう。</p>",
			"parameter_type": "optional",
			"default_value": [";なし(攻撃がヒットしない)"],
			"load_priority": ["?, ?"]
		},
		{
			"parameter": "HitFlag",
			"value": ["ヒットフラグ"],
			"type": ["string"],
			"description": "<p>敵がどういう状態ならヒットするかフラグを指定します。フラグは複数指定可能。</p><p>投げ技など連続技に組み込めない攻撃で有効。</p>",
			"parameter_type": "optional",
			"possible_value": [
				["フラグ", ""],
				["H", "立ち"],
				["L", "屈み"],
				["M", "立ち、屈みの両方"],
				["A", "空中"],
				["F", "落下状態"],
				["D", "ダウン状態(ただし、Fと組み合わせなければ機能しない)"],
				["P", "飛び道具を消せるようになる。ただし、Windows版のみ。"],
				["+", "食らい状態の敵のみにヒット"],
				["-", "食らい状態の敵にはヒットしない"]
			],
			"default_value": ["MAF ;ダウン状態にのみヒットしない"],
			"load_priority": ["?"]
		},
		{
			"parameter": "GuardFlag",
			"value": ["ガードフラグ"],
			"type": ["string"],
			"description": "<p>敵がどういう状態ならガードできるかフラグを指定します。フラグは複数指定可能。</p>",
			"parameter_type": "optional",
			"possible_value": [
				["フラグ", ""],
				["H", "立ち"],
				["L", "屈み"],
				["M", "立ち、屈みの両方"],
				["A", "空中"]
			],
			"default_value": ["MA ;どのような状態でもガード可"],
			"load_priority": ["?"]
		},
		{
			"parameter": "AffectTeam",
			"value": ["影響チーム"],
			"type": ["string"],
			"description": "<p>チームモード時、どのチームに攻撃が影響するかフラグを指定します。</p>",
			"possible_value": [
				["フラグ", ""],
				["B", "敵味方かまわず"],
				["E", "敵のみ"],
				["F", "味方のみ"]
			],
			"parameter_type": "optional",
			"default_value": ["E"],
			"load_priority": ["?"]
		},
		{
			"parameter": "AnimType",
			"value": ["アニメタイプ"],
			"type": ["string"],
			"description": "<p>相手のリアクションアニメの種類を指定します。</p><p>ただし、「up」と「diagup」はオプションで、相手が絵を用意してない場合は、「back」と同じ結果になります。</p>",
			"possible_value": [
				["文字列", "状態"],
				["L", "弱 (Lightの略)"],
				["M", "中 (Mediumの略)"],
				["H", "強 (Hard<!--Heavy-->の略)"],
				["B", "ふっとび (Backの略)"],
				["U", "真上ふっとび (UPの略)"],
				["D", "斜めふっとび (DiagUpの略)"]
			],
			"parameter_type": "optional",
			"default_value": ["Light"],
			"load_priority": ["?"]
		},
		{
			"parameter": "Air.AnimType",
			"value": ["空中でのアニメタイプ"],
			"type": ["string"],
			"description": "<p>空中でのアニメタイプを指定。省略時はanimtypeと同じ。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["?"]
		},
		{
			"parameter": "Fall.AnimType",
			"value": ["fall状態時のアニメタイプ"],
			"type": ["string"],
			"description": "<p>空中でのアニメタイプfall状態のときのアニメタイプです。省略時は、air.animtypeがupの時はup、それ以外ならbackです。</p><p>※fall状態・・・fall=1。hittimeを過ぎても、受身を取らない限り空中復帰できず、着地すると落下ダウンする状態。これに対し、fall=0の場合、空中で立ち直り、hittimeを過ぎると操作可能となる。また、hittime中でも、着地すると通常のジャンプ着地となる。なお、一度fall=1になると、fall=0の攻撃を受けてもfall=1のままとなる。</p><p></p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["?"]
		},
		{
			"parameter": "Ground.Type",
			"value": ["地上でののけぞり方"],
			"type": ["string"],
			"description": "<p>相手の地上でののけぞり方を文字列で指定します。</p>",
			"possible_value": [
				["文字列", "状態"],
				["H", "上のけぞり (Highの略)"],
				["L", "下のけぞり (Lowの略)"],
				["T", "転倒 (Tripの略)"],
				["N", "なし、使用は非推奨 (Non<!--Null-->の略)"]
			],
			"parameter_type": "optional",
			"default_value": ["High"],
			"load_priority": ["?"]
		},
		{
			"parameter": "Air.Type",
			"value": ["空中でののけぞり方"],
			"type": ["string"],
			"description": "<p>相手の空中でののけぞり方を文字列で指定します。設定方法はground.typeと同じ。省略時はground.typeと同じ値になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["?"]
		},
		{
			"parameter": "ProjID",
			"value": ["飛び道具のID番号"],
			"type": ["int"],
			"description": "<p>IDを指定。Projectile発生条件などに使用。正の整数のみ指定可。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["1"]
		},
		{
			"parameter": "ProjRemove",
			"value": ["消滅フラグ"],
			"type": ["int"],
			"description": "<p>0以外を指定すると、ヒット時に消えるようになります。省略時1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["2"]
		},
		{
			"parameter": "ProjRemoveTime",
			"value": ["射程時間"],
			"type": ["int"],
			"description": "<p>画面に出現してから、消滅するまでの時間を指定。省略時-1(消えない)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["3"]
		},
		{
			"parameter": "ProjShadow",
			"value": ["赤影, 緑影, 青影"],
			"type": ["int", "int", "int"],
			"description": "<p>影の色を指定。-1でステージ依存。省略時0,0,0(影なし)。255,255,255でまっくろ。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["4, 5, 6"]
		},
		{
			"parameter": "ProjMissTime",
			"value": ["ミス時間"],
			"type": ["int"],
			"description": "<p>複数ヒットする場合、何フレームごとにヒットするかを指定。省略時0。一瞬で全部当たります。</p><p>省略しない方がよいとされていますが、misstime中もprojectileは移動するため、ヒット数が多い場合、途中で敵をすり抜けてしまうことがあります。</p><p>全段ヒットする飛び道具の場合は、pausetimeの方で調節するのが吉。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["7"]
		},
		{
			"parameter": "ProjHits",
			"value": ["ヒット数"],
			"type": ["int"],
			"description": "<p>ヒット数を指定。省略時1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["8"]
		},
		{
			"parameter": "ProjPriority",
			"value": ["飛び道具優先度"],
			"type": ["int"],
			"description": "<p>飛び道具の優先度を指定。ヒット数に関係なく、高い方が低い方をかき消します。但し、かき消した場合、優先度が1下がります。省略時1。</p><p>例えば、3ヒットするprojpriority = 3の飛び道具は、飛び道具を2つかき消した後でヒットしても、3ヒットします。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["9"]
		},
		{
			"parameter": "ProjHitAnim",
			"value": ["ヒット時のアニメ番号"],
			"type": ["int"],
			"description": "<p>飛び道具が当たったときのアニメを指定。省略時-1(変更なし)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["10"]
		},
		{
			"parameter": "ProjRemAnim",
			"value": ["消滅時のアニメ番号"],
			"type": ["int"],
			"description": "<p>時間経過や、画面外に出たりして消えるときのアニメを指定。省略すると、ヒット時のアニメが使われます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["11"]
		},
		{
			"parameter": "ProjCancelAnim",
			"value": ["相殺時のアニメ番号"],
			"type": ["int"],
			"description": "<p>敵の飛び道具等にかき消されたときのアニメを指定。省略すると、消えるときのアニメが使われます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["12"]
		},
		{
			"parameter": "Velocity",
			"value": ["水平速度, 垂直速度"],
			"type": ["float", "float"],
			"description": "<p>初速度を指定。省略時0,0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["13, 14"]
		},
		{
			"parameter": "VelMul",
			"value": ["水平速度係数, 垂直速度係数"],
			"type": ["float", "float"],
			"description": "<p>加速度を倍数で指定。省略時1,1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["15, 16"]
		},
		{
			"parameter": "RemVelocity",
			"value": ["消滅時水平速度, 消滅時垂直速度"],
			"type": ["float", "float"],
			"description": "<p>消滅時の速度を指定。省略時0,0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["17, 18"]
		},
		{
			"parameter": "Accel",
			"value": ["水平加速度, 垂直加速度"],
			"type": ["float", "float"],
			"description": "<p>加速度を指定。省略時0,0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["19, 20"]
		},
		{
			"parameter": "ProjScale",
			"value": ["x縮尺, y縮尺"],
			"type": ["float", "float"],
			"description": "<p>縮尺を指定。cnsファイルの[Size]群にある\"proj.doscale\"パラメータが1の場合、同群の\"scale\"パラメータの影響も受けます。</p><p>省略時1,1(変更なし。ただし、proj.doscale=1の場合、プレイヤーのscaleの影響は受ける)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["21, 22"]
		},
		{
			"parameter": "ID",
			"value": ["ヒットid番号"],
			"type": ["int"],
			"description": "<p>識別用のIDをつけることができます。後述と組み合わせることにより、特定の技からは繋がらなかったりするようにできます。</p><p>また、Target系のステコン、トリガーが参照するID(HitID)は、このIDの攻撃によりターゲットとなった敵を示します。省略時0。</p><p></p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["23"]
		},
		{
			"parameter": "ChainID",
			"value": ["連続ヒットid番号"],
			"type": ["int"],
			"description": "<p>ここで指定したIDからのみ、攻撃が繋がるようになります。省略時-1(すべての攻撃が繋がります)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["24"]
		},
		{
			"parameter": "NoChainID",
			"value": ["不連続ヒットid番号1, 不連続ヒットid番号2"],
			"type": ["int", "int"],
			"description": "<p>ここで指定したIDからは攻撃が繋がらなくなります。2つまで指定可。ガード時も繋がらなくなる(攻撃がすり抜ける)ので、使いにくい。。。省略時-1(すべての攻撃が繋がります)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["25, 26"]
		},
		{
			"parameter": "Kill",
			"value": ["KOフラグ"],
			"type": ["int"],
			"description": "<p>0にすると、その攻撃で相手をKOできなくなります。省略時1。</p><p>最後の一撃でのみKOしたい多段攻撃などに。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["27"]
		},
		{
			"parameter": "Guard.Kill",
			"value": ["ガードKOフラグ"],
			"type": ["int"],
			"description": "<p>0にすると、ガード時のダメージで相手をKOできなくなります。省略時1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["28"]
		},
		{
			"parameter": "Fall.Kill",
			"value": "",
			"type": ["int"],
			"description": "<p>0にすると、落下ダウン時のダメージで相手をKOできなくなります。省略時1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["29"]
		},
		{
			"parameter": "HitOnce",
			"value": ["1回ヒットフラグ"],
			"type": ["boolean"],
			"description": "<p>省略時0。1にした場合、複数の敵がいても、1方にしかヒットしなくなります。attrがT(投げ)の場合、1になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["30"]
		},
		{
			"parameter": "Air.Juggle",
			"value": ["ジャグルポイント"],
			"type": ["int"],
			"description": "<p>fall状態の敵に対する連続技に必要なポイント数を上乗せします。StateDefの\"juggle\"パラメータと混同しないようにしましょう。</p><p>projectile専用のパラメータと思ってよいらしいです。省略時0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["31"]
		},
		{
			"parameter": "Damage",
			"value": ["ヒットダメージ, ガードダメージ"],
			"type": ["int", "int"],
			"description": "<p>ヒット、ガード時のダメージを整数で指定します。省略すると0です。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["32, 33"]
		},
		{
			"parameter": "GetPower",
			"value": ["p1ヒットゲージ増加量, p1ガードゲージ増加量"],
			"type": ["int", "int"],
			"description": "<p>攻撃がヒットした、ガードされたときに増えるゲージ量です。</p><p>省略時は、ヒット時がmugen.cfgのDefault.Attack.LifeToPowerMulパラメータにdamageをかけたものに、ガード時がその半分になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["34, 35"]
		},
		{
			"parameter": "GivePower",
			"value": ["p2ヒットゲージ増加量, p2ガードゲージ増加量"],
			"type": ["int", "int"],
			"description": "<p>攻撃がヒットした、ガードされたときに増える相手のゲージ量です。</p><p>省略時は、ヒット時がmugen.cfgのDefault.GetHit.LifeToPowerMulパラメータにdamageをかけたものに、ガード時がその半分になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["36, 37"]
		},
		{
			"parameter": "PauseTime",
			"value": ["p1停止時間, p2ブルブル時間"],
			"type": ["int", "int"],
			"description": "<p>ヒット時の自分と相手の停止時間を整数で指定します。停止時間中、相手はブルブル揺れます(HitShake状態)。省略時0,0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["39, 38"]
		},
		{
			"parameter": "NumHits",
			"value": ["ヒットカウント数"],
			"type": ["int"],
			"description": "<p>コンボカウンターに加算されるヒット数です。省略時1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["40"]
		},
		{
			"parameter": "HitSound",
			"value": ["グループ番号, アイテム番号"],
			"type": ["int", "int"],
			"description": "<p>ヒット音をcommon.sndから指定します。5,0(弱ヒット音)～5,4(大打撃音)から選ぶことになります。自分のsndファイルから指定したい場合は、\"hitsound = S1,0\"のように、先頭にSを記述します。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["41, 42"]
		},
		{
			"parameter": "GuardSound",
			"value": ["グループ番号, アイテム番号"],
			"type": ["int", "int"],
			"description": "<p>ガード音をcommon.sndから指定します。といっても、用意されているのは6,0のみ。自分のsndファイルから指定したい場合は、先頭にSを記述します。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["43, 44"]
		},
		{
			"parameter": "Priority",
			"value": ["ヒット優先度, 相打ちの挙動"],
			"type": ["int", "string"],
			"description": "<p>攻撃の優先度で1から7、相打ち時の挙動を「Hit」「Dodge」「Miss」の内から指定します。</p><p>実行者の攻撃と相手の攻撃が同時に発生した場合、数値の高い方のみヒットします。ヒット優先度が同じ場合、「Hit」「Miss」「Dodge」により以下のようになります。</p>",
			"possible_value": [
				["文字列", "状態"],
				["H", "攻撃がヒットする (Hitの略)"],
				["M", "自分の攻撃は当たらない (Missの略)"],
				["D", "相手が「Hit」でも両者空振り (Dodgeの略)"]
			],
			"parameter_type": "optional",
			"default_value": ["4, H"],
			"load_priority": ["45, ?"]
		},
		{
			"parameter": "P1StateNo",
			"value": ["ヒット時移行するステート番号"],
			"type": ["int"],
			"description": "<p>攻撃がヒットした場合に移行するステートの番号を指定します。主に投げ技で使用。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["-1"],
			"load_priority": ["46"]
		},
		{
			"parameter": "P2StateNo",
			"value": ["ヒット時相手に参照させるステート番号"],
			"type": ["int"],
			"description": "<p>攻撃がヒットした場合に、相手に参照させるステートの番号を指定します。これを指定した場合、HitOverrideを仕込んだ相手(Helper等)に攻撃が当たらなくなります。</p><p>P2StateNo=-1とすると、P2GetP1State=1の効果のみになる。（P2GetP1State=0が指定されている場合はP2GetP1Stateが優先されるためP2GetP1State=0となる。）なお、この際に5000番台に移動するのはGround.Type、Air.TypeがNormal(頭文字がN）以外の場合である。</p><p>投げに使ってもProjectile等と相打ちした時に致命的な不具合が生じることがあるので、できれば全く使わない方が良いです。</p><p>といいたいところですが、代わりに使うことになるTargetStateも扱いが難しいので、不具合を承知で使うのも止むを得ないかもしれません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["-1 ;無効"],
			"load_priority": ["47"]
		},
		{
			"parameter": "P2GetP1State",
			"value": ["ステート奪取フラグ"],
			"type": ["int"],
			"description": "<p>0の時はP2StateNoを指定していても対象者のステートを奪わず、対象者自身のステートを読みこませる。1の時は相手のステートを奪います。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [";相手に実行者の食らいステートを読み込ませる。"],
			"load_priority": ["48"]
		},
		{
			"parameter": "P1SprPriority",
			"value": "",
			"type": ["int"],
			"description": "<p>攻撃が接触した場合のスプライトの表示優先度を指定します。1だと相手の手前、-1だと奥に表示されます。省略時1。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["49"]
		},
		{
			"parameter": "; SprPriority",
			"value": ["スプライト表示優先度"],
			"type": ["int"],
			"description": "",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["49 ;P1SprPriorityと同じ扱い?"]
		},
		{
			"parameter": "P2SprPriority",
			"value": "",
			"type": ["int"],
			"description": "",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["50"]
		},
		{
			"parameter": "ForceStand",
			"value": ["強制立たせフラグ"],
			"type": ["int"],
			"description": "<p>1にすると、しゃがんだ相手にヒットしても立ち食らいポーズをとらせます。省略時は、ground.velocityのy速度が0なら0、0でなければ1です。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["51"]
		},
		{
			"parameter": "ForceNoFall",
			"value": "",
			"type": ["int"],
			"description": "",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["52"]
		},
		{
			"parameter": "Fall",
			"value": ["落下フラグ"],
			"type": ["int"],
			"description": "<p>通常、相手を浮かせるような攻撃でも、hittimeが終了すれば、相手は立ち直り、着地しますが、fall = 1にした場合、相手は自動では立ち直らず、受身操作（x+y）をしなければダウンします</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["53"]
		},
		{
			"parameter": "Fall.Damage",
			"value": ["damage_amt"],
			"type": ["int"],
			"description": "<p>落下状態のままダウンした場合に与えるダメージを指定します。省略時0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["54"]
		},
		{
			"parameter": "Fall.XVelocity",
			"value": ["落下バウンド水平速度"],
			"type": ["float"],
			"description": "<p>落下状態のままダウンした場合の、バウンド水平速度を変更する場合、指定します。省略時は速度変更なし。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["55"]
		},
		{
			"parameter": "Fall.YVelocity",
			"value": ["落下バウンド垂直速度"],
			"type": ["float"],
			"description": "<p>落下状態のままダウンした場合の、バウンド垂直速度を指定します。省略時-4.5。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["56"]
		},
		{
			"parameter": "Fall.Recover",
			"value": ["受身可能フラグ"],
			"type": ["int"],
			"description": "<p>0にすると相手が落下状態でも受身（x+y）をとれなくなります。省略時1(受身可能)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["57"]
		},
		{
			"parameter": "Fall.RecoverTime",
			"value": ["受身可能受付開始時間"],
			"type": ["int"],
			"description": "<p>落下状態になってから受身が取れるようになるまでの時間を指定します。pausetimeは含まれません。省略時4。fall.recover = 0にした場合は無効。</p><p>追撃できることを想定している技の場合、大きな値を設定するか、fall.recover=0にするとよいでしょう。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["58"]
		},
		{
			"parameter": "SparkNo",
			"value": ["ヒットスパークのアクション番号"],
			"type": ["int"],
			"description": "<p>ヒットスパークのアクション番号をfightfx.airから指定します。自分のairファイルから指定したい場合は、\"sparkno = S2000,0\"のように、先頭にSを記述します。省略時は、cnsで設定した値が使用されます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["59"]
		},
		{
			"parameter": "Guard.SparkNo",
			"value": ["ガードスパークのアクション番号"],
			"type": ["int"],
			"description": "<p>ガードスパークのアクション番号をfightfx.airから指定します。自分のairファイルから指定したい場合は、\"guard.sparkno = S2010,0\"のように、先頭にSを記述します。省略時は、cnsで設定した値が使用されます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["60"]
		},
		{
			"parameter": "SparkXY",
			"value": ["スパークx座標, スパークy座標"],
			"type": ["int", "int"],
			"description": "<p>ヒット、ガードスパークの表示位置を指定します。省略時0,0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["61, 62"]
		},
		{
			"parameter": "P1Facing",
			"value": ["p1の向き"],
			"type": ["int"],
			"description": "<p>-1にすると、攻撃がヒットした場合に後ろを向きます。主に投げ技で使用。省略時は向きを変えません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["63"]
		},
		{
			"parameter": "P1GetP2Facing",
			"value": ["p1の向き"],
			"type": ["int"],
			"description": "<p>1にすると、攻撃がヒットした場合に相手と同じ方向を、-1で逆を向きます。省略時0(向きを変えない)。p1facingより優先されます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["64"]
		},
		{
			"parameter": "Snap",
			"value": ["x固定座標, y固定座標"],
			"type": ["int", "int"],
			"description": "<p>ヒットした相手を固定する位置を、P1を基準として指定します。</p><p>このパラメータも、通常、使用しません。投げ等で相手を指定位置に固定する場合は、TargetBindを使用します。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["65 -> 67, 66 -> 68"]
		},
		{
			"parameter": "; MinDist",
			"value": ["x最小座標, y最小座標"],
			"type": ["int", "int"],
			"description": "<p>攻撃がヒットしている間の、P2の移動範囲をP1の位置を基準として指定できますが、このパラメータは一般に使用されません。とありますが、カンフーマンで使われてたり。。。。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["65, 66"]
		},
		{
			"parameter": "; MaxDist",
			"value": ["x最大座標, y最大座標"],
			"type": ["int", "int"],
			"description": "<p>攻撃がヒットしている間の、P2の移動範囲をP1の位置を基準として指定できますが、このパラメータは一般に使用されません。とありますが、カンフーマンで使われてたり。。。。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["67, 68"]
		},
		{
			"parameter": "P2Facing",
			"value": ["p2の向き"],
			"type": ["int"],
			"description": "<p>1にすると、攻撃がヒットした場合、相手に正面を向かせます。-1にすると後ろを向かせます。省略時は向きを変えません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["69"]
		},
		{
			"parameter": "Ground.HitTime",
			"value": ["ヒット時間"],
			"type": ["int"],
			"description": "<p>相手が攻撃を受けて行動不能になる時間です。長くするほど連続攻撃が繋がりやすくなります。永久コンボが発生しないように、気をつけて設定しましょう。</p><p>相手が地上にいる間のみ有効です。省略時0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["70"]
		},
		{
			"parameter": "Ground.SlideTime",
			"value": ["ヒットバック時間"],
			"type": ["int"],
			"description": "<p>相手が攻撃を受けて後ずさる時間です。この時間が経過すると、ブレーキがかかります。ただし、やられステートのphysicsがSやCになっているため、ヒットバックは摩擦によっても停止します。よって、よろけやられのような、ゆっくりとしたヒットバックは、HitDefでは再現できません。ナニソレ。</p><p>省略時0。殆ど意味のないパラメータですが、省略すると、強烈なブレーキがかかってしまうので、省略もできません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["71"]
		},
		{
			"parameter": "Ground.Velocity",
			"value": ["ヒット速度X, ヒット速度Y"],
			"type": ["float", "float"],
			"description": "<p>相手が地上で攻撃を受けて移動する速度です。yに負数を指定すると、宙に浮きます。</p><p>省略時0,0。地上にいる場合、摩擦の影響を受けます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["72, 73"]
		},
		{
			"parameter": "Ground.CornerPush.VelOff",
			"value": ["地上コーナープッシュ速度"],
			"type": ["float"],
			"description": "<p>画面端で地上の相手に攻撃を加えたときに、押し戻される速度を指定します。値が大きくなるほど、画面端から遠くに押し戻されます。</p><p>省略時は、attrがAの場合は0、それ以外の場合は、1.3*guard.velocityとなります。</p><p>相手の移動距離とは無関係で、相手のshaketimeではなく、自分のpausetimeが0になった瞬間に速度がかかります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["74"]
		},
		{
			"parameter": "Air.HitTime",
			"value": ["空中でのヒット時間"],
			"type": ["int"],
			"description": "<p>相手が空中で攻撃を受けて行動不能になる時間です。この時間を過ぎると、相手はコントロールを取り戻します。ちなみに、このときのグラフィックはairにのみ依存するため、見た目が立ち直っていても、時間内なら行動不能(5035番のアニメが短いとき起きる現象)ですし、時間が経過していれば、見た目がのけぞり中でも行動可能(5035番のアニメが長いとき起きる現象)です。省略時は20。つまり、この値に合わせてair(5035番)を設定する必要があります。fallパラメータが1の場合、このパラメータは無効になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["75"]
		},
		{
			"parameter": "Air.Fall",
			"value": ["value"],
			"type": ["int"],
			"description": "<p>空中ヒットしたときのみ落下状態にしたい場合は1にします。fall = 1だと地上やられでも落下状態になります。省略時はfallと同値。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["76"]
		},
		{
			"parameter": "Air.Velocity",
			"value": ["空中ヒット速度X, 空中ヒット速度Y"],
			"type": ["float", "float"],
			"description": "<p>相手が空中で攻撃を受けたとき移動する速度です。省略時0,0。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["77, 78"]
		},
		{
			"parameter": "Air.CornerPush.VelOff",
			"value": ["空中コーナープッシュ速度"],
			"type": ["float"],
			"description": "<p>画面端で空中の相手に攻撃を加えたときに、押し戻される速度を指定します。値が大きくなるほど、画面端から遠くに押し戻されます。</p><p>省略時は、ground.cornerpush.veloffと同値になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["79"]
		},
		{
			"parameter": "Down.Bounce",
			"value": ["ダウン追い討ちヒットバウンドフラグ"],
			"type": ["int"],
			"description": "<p>1にすると、ダウン追い討ちヒット時、fall.xvelocityとfall.yvelocityでバウンドします。down.velocityの垂直速度が0の時のみ有効。</p><p>省略時0(バウンドしない)。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["80"]
		},
		{
			"parameter": "Down.HitTime",
			"value": ["ダウン追い討ちヒット時間"],
			"type": ["int"],
			"description": "<p>ダウン状態の敵に攻撃が当たったとき、スライドする時間です。down.velocityの垂直速度が0の時のみ有効。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["81"]
		},
		{
			"parameter": "Down.Velocity",
			"value": ["ダウン追い討ち水平速度, ダウン追い討ち垂直速度"],
			"type": ["float", "float"],
			"description": "<p>ダウン追い討ちヒット時ののけぞり速度を指定します。垂直方向の速度が0以外の場合、相手は宙に浮きます。0の場合はスライドします。省略時は、air.velocityと同値。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["82, 83"]
		},
		{
			"parameter": "Down.CornerPush.VelOff",
			"value": ["ダウンコーナープッシュ速度"],
			"type": ["float"],
			"description": "<p>画面端でダウン状態の相手に攻撃を加えたときに、押し戻される速度を指定します。値が大きくなるほど、画面端から遠くに押し戻されます。</p><p>省略時は、ground.cornerpush.veloffと同値になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["84"]
		},
		{
			"parameter": "Guard.Velocity",
			"value": ["ガード速度X"],
			"type": ["float"],
			"description": "<p>相手が地上で攻撃をガードしたとき移動する速度です。垂直方向は指定不可。</p><p>省略時はground.velocityと同値。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["85"]
		},
		{
			"parameter": "Guard.HitTime",
			"value": ["ガード時間"],
			"type": ["int"],
			"description": "<p>相手が攻撃をガードしてから自動的に(キーを後ろに入力しなくても)ガードモーションをとり続ける時間。行動不能時間ではないので注意。</p><p>DOS版では、なぜか、実際にゲームに反映されるのは、指定値の半分になります。省略するとground.hittimeと同値になりますが、前述の仕様により、実際のガード時間はground.hittimeの半分となり、硬直は、guard.ctrltime(省略時guard.slidetime)か「ground.hittimeの半分」のどちらか低い方、ということにになります。</p><p>「ガードされると凄く不利」というのがDOSの仕様です。DOSでの使用を想定している場合は、ちゃんと設定したほうがよいでしょう。 WIN版では、指定値がそのまま適応されます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["86"]
		},
		{
			"parameter": "Guard.SlideTime",
			"value": ["ガードバック時間"],
			"type": ["int"],
			"description": "<p>ground.slidetimeのガード版。省略時はguard.hittimeと同値になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["87"]
		},
		{
			"parameter": "Guard.CtrlTime",
			"value": ["ガードからの復帰時間"],
			"type": ["int"],
			"description": "<p>相手が攻撃をガードしてからコントロールを取り戻すまでの時間。ただし、どんなに大きな値にしてもguard.hittimeが過ぎれば相手はコントロールを取り戻します。</p><p>省略時は、なぜかguard.slidetimeと同値。ちゃんと設定した方がよいパラメータです。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["88"]
		},
		{
			"parameter": "Guard.Dist",
			"value": ["ガード認識距離"],
			"type": ["int"],
			"description": "<p>相手がガード操作を行うことでガードポーズを取るようになる距離をピクセルで指定します。省略時は、cns冒頭で設定した値と同じになります。</p><p>基本的に、使用されることのないパラメータです。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["89"]
		},
		{
			"parameter": "Guard.PauseTime",
			"value": ["p1停止時間, p2ブルブル時間"],
			"type": ["int", "int"],
			"description": "<p>ガード時の自分と相手の停止時間を整数で指定します。停止時間中、相手はブルブル揺れます(HitShake状態)。省略した場合、pausetimeと同じになります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["91, 90"]
		},
		{
			"parameter": "Guard.CornerPush.VelOff",
			"value": ["地上ガードコーナープッシュ速度"],
			"type": ["float"],
			"description": "<p>画面端で地上の相手に攻撃をガードされた時に、押し戻される速度を指定します。値が大きくなるほど、画面端から遠くに押し戻されます。</p><p>省略時は、ground.cornerpush.veloffと同値になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["92"]
		},
		{
			"parameter": "AirGuard.Velocity",
			"value": ["空中ガード速度X, 空中ガード速度Y"],
			"type": ["float"],
			"description": "<p>相手が空中で攻撃をガードしたとき移動する速度です。省略時は、air.velocityの空中ヒット速度X * 1.5, 空中ヒット速度Y / 2。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["93, 94"]
		},
		{
			"parameter": "AirGuard.CtrlTime",
			"value": ["空中ガード復帰時間"],
			"type": ["int"],
			"description": "<p>相手が空中で攻撃をガードしてからコントロールを取り戻すまでの時間。省略時はguard.ctrltimeと同値。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["95"]
		},
		{
			"parameter": "AirGuard.CornerPush.VelOff",
			"value": ["地上ガードコーナープッシュ速度空中"],
			"type": ["float"],
			"description": "<p>画面端で空中の相手に攻撃をガードされた時に、押し戻される速度を指定します。値が大きくなるほど、画面端から遠くに押し戻されます。</p><p>省略時は、ground.cornerpush.veloffと同値になります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["96"]
		},
		{
			"parameter": "YAccel",
			"value": ["重力"],
			"type": ["float"],
			"description": "<p>ヒット時の重力を指定します。省略時は、相手の重力に依存。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["97"]
		},
		{
			"parameter": "PalFX.Time",
			"value": ["持続時間"],
			"type": ["int"],
			"description": "<p>効果の持続時間をフレーム単位で指定します。</p><p>ステートが変わっても有効なので、パレット変更中にやられステートに移行しても効果は持続します。この現象を回避したければ、<code>Time=1</code>にして、トリガーで時間を調整します。ただし、その場合SinAddは機能しません。または、効果を終わらせたい時に別のAllPalFXで<code>Time=1</code>をだけを指定して値を上書きします。ただし、この場合相手プレイヤーのAllPalFXも消してしまいます。</p><p>-1で表示を永続化。0では表示されず、1以上か-1を指定しなければなりません。</p><p>※60フレーム=1秒</p>",
			"min_value": ["-1"],
			"max_value": ["2147483647"],
			"parameter_type": "optional",
			"default_value": ["0"],
			"load_priority": ["98"]
		},
		{
			"parameter": "PalFX.Color",
			"value": ["彩度"],
			"type": ["int"],
			"description": "<p>パレットの彩度を下げます。</p><p><div>例: 彩度を低くした時、明るい色ほど白・暗い色ほど黒に近づきます。</div><span style=\"background-color: hsl(0, 0%, 100%);border: 1px solid #000;\">　</span><br><span style=\"background-color: hsl(0, 0%, 80%);\">　</span><span style=\"background-color: hsl(0, 10%, 80%);\">　</span><span style=\"background-color: hsl(0, 20%, 80%);\">　</span><span style=\"background-color: hsl(0, 30%, 80%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 60%);\">　</span><span style=\"background-color: hsl(0, 10%, 60%);\">　</span><span style=\"background-color: hsl(0, 20%, 60%);\">　</span><span style=\"background-color: hsl(0, 30%, 60%);\">　</span><span style=\"background-color: hsl(0, 40%, 60%);\">　</span><span style=\"background-color: hsl(0, 50%, 60%);\">　</span><span style=\"background-color: hsl(0, 60%, 60%);\">　</span><span style=\"background-color: hsl(0, 70%, 60%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 50%);\">　</span><span style=\"background-color: hsl(0, 10%, 50%);\">　</span><span style=\"background-color: hsl(0, 20%, 50%);\">　</span><span style=\"background-color: hsl(0, 30%, 50%);\">　</span><span style=\"background-color: hsl(0, 40%, 50%);\">　</span><span style=\"background-color: hsl(0, 50%, 50%);\">　</span><span style=\"background-color: hsl(0, 60%, 50%);\">　</span><span style=\"background-color: hsl(0, 70%, 50%);\">　</span><span style=\"background-color: hsl(0, 80%, 50%);\">　</span><span style=\"background-color: hsl(0, 90%, 50%);\">　</span><span style=\"background-color: hsl(0, 100%, 50%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 40%);\">　</span><span style=\"background-color: hsl(0, 10%, 40%);\">　</span><span style=\"background-color: hsl(0, 20%, 40%);\">　</span><span style=\"background-color: hsl(0, 30%, 40%);\">　</span><span style=\"background-color: hsl(0, 40%, 40%);\">　</span><span style=\"background-color: hsl(0, 50%, 40%);\">　</span><span style=\"background-color: hsl(0, 60%, 40%);\">　</span><span style=\"background-color: hsl(0, 70%, 40%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 20%);\">　</span><span style=\"background-color: hsl(0, 10%, 20%);\">　</span><span style=\"background-color: hsl(0, 20%, 20%);\">　</span><span style=\"background-color: hsl(0, 30%, 20%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 0%);\">　</span><br><span>0</span>←　　　　　　　　→<span>256</span></p>",
			"min_value": ["0 ;グレースケール"],
			"max_value": ["256 ;変化なし"],
			"parameter_type": "optional",
			"default_value": ["256"],
			"load_priority": ["99"]
		},
		{
			"parameter": "PalFX.Add",
			"value": ["加算する赤色", "加算する緑色", "加算する青色"],
			"type": ["int", "int", "int"],
			"description": "<p>指定した色をパレットに加算します。</p><p>暗い色ほど指定色に近づき、色の合計値が大きくなるほど、色が明るくなります。</p><p>例: <span style=\"border: 1px solid #000;background: rgb(256,0,0);\">　</span><code>Add=256,0,0</code>の場合、<span style=\"border: 1px solid #000;background: rgb(0,0,0);\">　</span>黒(0,0,0)は<span style=\"border: 1px solid #000;background: rgb(256,0,0);\">　</span>赤(256,0,0)になりますが、<span style=\"border: 1px solid #000;background: rgb(256,256,256);\">　</span>白(256,256,256)は<span style=\"border: 1px solid #000;background: rgb(256,256,256);\">　</span>白(256,256,256)のままです。</p>",
			"min_value": ["-256", "-256", "-256 ;黒"],
			"max_value": ["256", "256", "256 ;白"],
			"parameter_type": "optional",
			"default_value": ["0, 0, 0"],
			"load_priority": ["100, 101, 102"]
		},
		{
			"parameter": "PalFX.Mul",
			"value": ["合成する赤色", "合成する緑色", "合成する青色"],
			"type": ["int", "int", "int"],
			"description": "<p>基本色(パレット+Add+SinAddの合計値)に合成色(Mulで指定した値)/256を乗算します。</p><p>合成色の値が小さくなるほど、色が暗くなります。明るい色ほど合成色に近づきます。</p><p>例: <span style=\"border: 1px solid #000;background: rgb(64,256,64);\">　</span><code>Add=64,256,64</code>,<code>Mul=1,256,1</code>の場合、<span style=\"border: 1px solid #000;background: rgb(256,256,256);\">　</span>白(256,256,256)は<span style=\"border: 1px solid #000;background: rgb(1,256,1);\">　</span>緑(1,256,1)になりますが、<span style=\"border: 1px solid #000;background: rgb(0,0,0);\">　</span>黒(0,0,0)は<span style=\"border: 1px solid #000;background: rgb(0,0,0);\">　</span>黒(0,0,0)のままです。</p>",
			"min_value": ["1", "1", "1"],
			"max_value": ["256", "256", "256 ;変化なし"],
			"parameter_type": "optional",
			"default_value": ["256, 256, 256"],
			"load_priority": ["103, 104, 105"]
		},
		{
			"parameter": "PalFX.SinAdd",
			"value": ["周期する赤色", "周期する緑色", "周期する青色", "周期"],
			"type": ["int", "int", "int", "int"],
			"description": "<p>指定色を、指定周期(単位はフレーム)の正弦波でパレットに加算/減算。</p><p>周期が大きいほどゆるやかに色が変化します。</p><p>例: <span style=\"border: 1px solid #000;background: rgb(0,0,256);\">　</span><code>SinAdd=0,0,256,20</code>,<span style=\"border: 1px solid #000;background: rgb(0,0,0);\">　</span><code>Add=0,0,0</code>,<code>Mul=256,256,256</code>の場合、<span style=\"border: 1px solid #000;background: rgb(128,128,128);\">　</span>(128,128,128)は、5F後<span style=\"border: 1px solid #000;background: rgb(128,128,256);\">　</span>(128,128,256)になり、10F後<span style=\"border: 1px solid #000;background: rgb(128,128,128);\">　</span>(128,128,128)に戻り、15F後<span style=\"border: 1px solid #000;background: rgb(128,128,0);\">　</span>(128,128,0)、20F後<span style=\"border: 1px solid #000;background: rgb(128,128,128);\">　</span>(128,128,128)に戻る、という周期を繰り返します。</p>",
			"min_value": ["", "", "", ""],
			"max_value": ["", "", "", ""],
			"parameter_type": "optional",
			"default_value": ["0", "0", "0", "0"],
			"load_priority": ["106, 107, 108"],
			"media": {
				"image": [
					{"title": "", "file": "SinAdd.png", "width": "600", "height": "242"}
				]
			}
		},
		{
			"parameter": "PalFX.InvertAll",
			"value": ["色反転フラグ"],
			"type": ["boolean"],
			"description": "<p>色を反転するか・しないかのフラグです。</p><p>例: <span style=\"border: 1px solid #000;background: rgb(0,0,0);\">　</span>(0,0,0)→<span style=\"border: 1px solid #000;background: rgb(256,256,256);\">　</span>(256,256,256),<span style=\"border: 1px solid #000;background: rgb(0,252,0);\">　</span>(0,252,0)→<span style=\"border: 1px solid #000;background: rgb(256,4,256);\">　</span>(256,4,256),<span style=\"border: 1px solid #000;background: rgb(256,0,0);\">　</span>(256,0,0)→<span style=\"border: 1px solid #000;background: rgb(0,256,256);\">　</span>(0,256,256)</p>",
			"min_value": ["0 ;色が反転しない"],
			"max_value": ["1 ;色が反転する"],
			"parameter_type": "optional",
			"default_value": ["0"],
			"load_priority": ["109"],
			"media": {
				"image": [
					{"title": "", "file": "InvertAll.png", "width": "167", "height": "167"}
				]
			}
		},
		{
			"parameter": "EnvShake.Time",
			"value": ["ヒット時画面振動時間"],
			"type": ["int"],
			"description": "<p>揺れの持続時間を指定。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["110"]
		},
		{
			"parameter": "EnvShake.Ampl",
			"value": ["揺れ幅"],
			"type": ["int"],
			"description": "<p>揺れ幅をピクセル寸法で指定。負数を指定すると、最初、下方向に揺れます。省略時-4。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["111"]
		},
		{
			"parameter": "EnvShake.Phase",
			"value": ["位相"],
			"type": ["float"],
			"description": "<p>位相を指定。省略時0。但し、振動数の乗数が90以上のときは、省略時90。よくわかりません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["112"]
		},
		{
			"parameter": "EnvShake.Freq",
			"value": ["揺れの速度"],
			"type": ["float"],
			"description": "<p>揺れるスピードを、0(低速)～180(高速)の間で指定。省略時60。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["113"]
		},
		{
			"parameter": "Fall.EnvShake.Time",
			"value": ["落下時画面振動時間"],
			"type": ["int"],
			"description": "<p>相手の落下ダウン時に画面を揺らしたい時間を指定。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["114"]
		},
		{
			"parameter": "Fall.EnvShake.Ampl",
			"value": ["振幅"],
			"type": ["float"],
			"description": "<p>揺れ幅をピクセル寸法で指定。負数を指定すると、最初、下方向に揺れます。省略時-4。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["115"]
		},
		{
			"parameter": "Fall.EnvShake.Phase",
			"value": ["位相"],
			"type": ["int"],
			"description": "<p>位相を指定。省略時0。但し、振動数の乗数が90以上のときは、省略時90。よくわかりません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["116"]
		},
		{
			"parameter": "Fall.EnvShake.Freq",
			"value": ["振動数"],
			"type": ["float"],
			"description": "<p>揺れるスピードを、0(低速)～180(高速)の間で指定。省略時60。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["117"]
		},
		{
			"parameter": "Offset",
			"value": ["水平発射位置, 垂直発射位置"],
			"type": ["int", "int"],
			"description": "<p>PosTypeを基準とした発射位置を指定。</p>",
			"min_value": ["-2147483647", "-2147483647"],
			"max_value": ["2147483647", "2147483647"],
			"parameter_type": "optional",
			"default_value": ["0", "0"],
			"load_priority": ["118, 119"]
		},
    {
      "parameter": "PosType",
      "value": ["基準点の位置"],
      "type": ["string"],
      "description": "<p>飛び道具を出現させるための基準点(0,0)をどこにするか、以下の文字列から指定します。</p>",
      "parameter_type": "optional",
      "default_value": ["P1"],
      "possible_value": [
        ["タイプ", "基準"],
        ["P1", "<p>実行者が基準点(0,0)になります。X軸の正数は実行者の正面・Y軸の負数は実行者の頭上。</p><div><img src=\"./media/img/PosType_P1.png\" alt=\"MUGEN PosType P1\"></div>"],
        ["P2", "<p>実行者に最も近い敵が基準点(0,0)になります。X軸の正数は最も近い敵の正面・Y軸の負数は最も近い敵の頭上。</p><div><img src=\"./media/img/PosType_P2.png\" alt=\"MUGEN PosType P2\"></div>"],
        ["F", "<p>FはFrontの略。実行者の正面の画面端が基準点(0,0)になります。X軸の負数は基準点から実行者の方向・Y軸の負数は地面から上。</p><div><img src=\"./media/img/PosType_Front_1.png\" alt=\"MUGEN PosType Front\"></div>"],
        ["B", "<p>BはBackの略。実行者の背面の画面端が基準点(0,0)になります。X軸の正数は基準点から実行者の方向・Y軸の負数は地面から上。</p><div><img src=\"./media/img/PosType_Back_1.png\" alt=\"MUGEN PosType Back\"></div>"],
        ["L", "<p>LはLeftの略。画面左上が基準点(0,0)になります。X軸の正数は画面右方向・Y軸の正数は画面下方向。</p><div><img src=\"./media/img/PosType_Left_Helper.png\" alt=\"MUGEN PosType Left\"></div>"],
        ["R", "<p>RはRightの略。画面右上が基準点(0,0)になります。X軸の負数は画面左方向・Y軸の正数は画面下方向。</p><div><img src=\"./media/img/PosType_Right_Helper.png\" alt=\"MUGEN PosType Right\"></div>"],
        ["N", "<p>NはNoneの略。ステージ中央が基準点(0,0)になります。他のPosTypeと違い基準点は絶対に動きません。X軸は右方向が正数・左方向が負数。Y軸は上方向が負数・下方向が正数。</p><p>Version1.1から追加された値です。</p><div><img src=\"./media/img/PosType_None.png\" alt=\"MUGEN PosType None\"></div>"]
      ],
      "load_priority": ["?"]
    },
		{
			"parameter": "ProjSprPriority",
			"value": ["スプライト表示優先度"],
			"type": ["int"],
			"description": "<p>飛び道具のスプライト表示優先度を指定。省略時3。結構高いです。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["120"]
		},
		{
			"parameter": "ProjStageBound",
			"value": ["ステージ外射程"],
			"type": ["int"],
			"description": "<p>ステージ外に出てから消滅するまでの距離をピクセル(ドット)で指定。省略時40。消滅アニメの半径より大きくしましょう。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["121"]
		},
		{
			"parameter": "ProjEdgeBound",
			"value": ["画面外射程"],
			"type": ["int"],
			"description": "<p>画面外に出てから消滅するまでの距離をピクセル(ドット)で指定。省略時40。消滅アニメの半径より小さいと、消滅アニメが画面にはみ出ます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["122"]
		},
		{
			"parameter": "ProjHeightBound",
			"value": ["上空射程, 地上射程"],
			"type": ["int", "int"],
			"description": "<p>飛び道具の上下射程を指定。この範囲を超えると、消滅します。</p><p>省略時-240,1。上空240ピクセル、地下1ピクセルで消滅します。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["123, 124"]
		},
		{
			"parameter": "ProjAnim",
			"value": ["飛び道具のアニメ番号"],
			"type": ["int"],
			"description": "<p>飛び道具のアニメを指定。</p><p>ProjAnim=-1で実行時の実行者（おそらくはRoot？未検証）のAnim。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["0"],
			"load_priority": ["125"]
		},
		{
			"parameter": "PauseMoveTime",
			"value": ["pause無視時間"],
			"type": ["int"],
			"description": "<p>pause中に動ける時間を指定。コントローラーの実行主体は問いません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["126"]
		},
		{
			"parameter": "SuperMoveTime",
			"value": ["superpause無視時間"],
			"type": ["int"],
			"description": "<p>superpause中に動ける時間を指定。コントローラーの実行主体は問いません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["127"]
		},
		{
			"parameter": "AfterImage.Time",
			"value": ["持続時間"],
			"type": ["int"],
			"description": "<p>指定時間内は残像が付き続けます。ステートが変わっても有効ですので、持続時間中に攻撃を受けると、やられモーションにも残像が付きます。-1で永続します。0で前回のAfterImageを消去できます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["1"],
			"load_priority": ["128"]
		},
		{
			"parameter": "AfterImage.Length",
			"value": ["ヒストリーバッファ容量"],
			"type": ["int"],
			"description": "<p>TimeGapで指定した数値の間隔でフレームを選ばれ、Lengthで指定した数だけそのフレームの時の自キャラの画像と場所が履歴に保存されます。</p>",
			"min_value": ["1"],
			"max_value": ["60"],
			"parameter_type": "optional",
			"default_value": ["20"],
			"load_priority": ["129"],
			"media": {
				"video": [
					{"title": "Length = 20", "file": "AfterImage_Length_20"},
					{"title": "Length = 60", "file": "AfterImage_Length_60"}
				]
			}
		},
		{
			"parameter": "AfterImage.TimeGap",
			"value": ["スキップフレーム数"],
			"type": ["int"],
			"description": "<p>Timegapで指定された数値の間隔でフレームが選ばれていきます。この時選ばれたフレームのキャラの画像と位置が履歴として保存されます。連続写真のような残像にしたい場合は、値を小さくしましょう。また、値が大きくなれば残像の間隔は長くなります。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["1"],
			"load_priority": ["130"],
			"media": {
				"video": [
					{"title": "Timegap = 1", "file": "AfterImage_Timegap_1"},
					{"title": "Timegap = 4", "file": "AfterImage_Timegap_4"}
				]
			}
		},
		{
			"parameter": "AfterImage.FrameGap",
			"value": ["フレーム間隔"],
			"type": ["int"],
			"description": "<p>Lengthの時に保存された履歴から、FrameGapで指定された数値の間隔で履歴が選ばれ残像として表示されます。値を大きくすると、履歴が選ばれる間隔が大きくなるので、表示される残像の間隔も大きくなります。また、設定する値は必ずLengthより小さい値を設定しないと何も表示されません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["4"],
			"load_priority": ["131"],
			"media": {
				"video": [
					{"title": "Framegap = 1", "file": "AfterImage_Framegap_1"},
					{"title": "Framegap = 4", "file": "AfterImage_Framegap_4"}
				],
				"image": [
					{"title": "TimeGap,FrameGap,Lengthの流れ", "file": "AfterImage.gif", "width": "420", "height": "420"}
				]
			}
		},
		{
			"parameter": "AfterImage.PalColor",
			"value": ["彩度"],
			"type": ["int"],
			"description": "<p>パレットの彩度を下げます。</p><p><div>例: 彩度を低くした時、明るい色ほど白・暗い色ほど黒に近づきます。</div><span style=\"background-color: hsl(0, 0%, 100%);border: 1px solid #000;\">　</span><br><span style=\"background-color: hsl(0, 0%, 80%);\">　</span><span style=\"background-color: hsl(0, 10%, 80%);\">　</span><span style=\"background-color: hsl(0, 20%, 80%);\">　</span><span style=\"background-color: hsl(0, 30%, 80%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 60%);\">　</span><span style=\"background-color: hsl(0, 10%, 60%);\">　</span><span style=\"background-color: hsl(0, 20%, 60%);\">　</span><span style=\"background-color: hsl(0, 30%, 60%);\">　</span><span style=\"background-color: hsl(0, 40%, 60%);\">　</span><span style=\"background-color: hsl(0, 50%, 60%);\">　</span><span style=\"background-color: hsl(0, 60%, 60%);\">　</span><span style=\"background-color: hsl(0, 70%, 60%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 50%);\">　</span><span style=\"background-color: hsl(0, 10%, 50%);\">　</span><span style=\"background-color: hsl(0, 20%, 50%);\">　</span><span style=\"background-color: hsl(0, 30%, 50%);\">　</span><span style=\"background-color: hsl(0, 40%, 50%);\">　</span><span style=\"background-color: hsl(0, 50%, 50%);\">　</span><span style=\"background-color: hsl(0, 60%, 50%);\">　</span><span style=\"background-color: hsl(0, 70%, 50%);\">　</span><span style=\"background-color: hsl(0, 80%, 50%);\">　</span><span style=\"background-color: hsl(0, 90%, 50%);\">　</span><span style=\"background-color: hsl(0, 100%, 50%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 40%);\">　</span><span style=\"background-color: hsl(0, 10%, 40%);\">　</span><span style=\"background-color: hsl(0, 20%, 40%);\">　</span><span style=\"background-color: hsl(0, 30%, 40%);\">　</span><span style=\"background-color: hsl(0, 40%, 40%);\">　</span><span style=\"background-color: hsl(0, 50%, 40%);\">　</span><span style=\"background-color: hsl(0, 60%, 40%);\">　</span><span style=\"background-color: hsl(0, 70%, 40%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 20%);\">　</span><span style=\"background-color: hsl(0, 10%, 20%);\">　</span><span style=\"background-color: hsl(0, 20%, 20%);\">　</span><span style=\"background-color: hsl(0, 30%, 20%);\">　</span><br><span style=\"background-color: hsl(0, 0%, 0%);\">　</span><br><span>0</span>←　　　　　　　　→<span>256</span></p>",
			"min_value": ["0 ;グレースケール"],
			"max_value": ["256 ;変化なし"],
			"parameter_type": "optional",
			"default_value": ["256"],
			"load_priority": ["132"]
		},
		{
			"parameter": "AfterImage.PalInvertAll",
			"value": ["色反転フラグ"],
			"type": ["boolean"],
			"description": "<p>色を反転するか・しないかのフラグです。</p><p>例: <span style=\"border: 1px solid #000;background: rgb(0,0,0);\">　</span>(0,0,0)→<span style=\"border: 1px solid #000;background: rgb(256,256,256);\">　</span>(256,256,256),<span style=\"border: 1px solid #000;background: rgb(0,252,0);\">　</span>(0,252,0)→<span style=\"border: 1px solid #000;background: rgb(256,4,256);\">　</span>(256,4,256),<span style=\"border: 1px solid #000;background: rgb(256,0,0);\">　</span>(256,0,0)→<span style=\"border: 1px solid #000;background: rgb(0,256,256);\">　</span>(0,256,256)</p>",
			"min_value": ["0 ;色が反転しない"],
			"max_value": ["1 ;色が反転する"],
			"parameter_type": "optional",
			"default_value": ["0"],
			"load_priority": ["133"],
			"media": {
				"image": [
					{"title": "", "file": "InvertAll.png", "width": "167", "height": "167"}
				]
			}
		},
		{
			"parameter": "AfterImage.PalBright",
			"value": ["add_赤, add_緑, add_青"],
			"type": ["int", "int", "int"],
			"description": "<p>残像のパレットに指定の色要素を加算します。例えば、0,0,256とすれば、青っぽくなりますが、同時に白っぽくもなります。もともと白い部分は白いまま。また、省略すると少しだけ明度が上がった状態になっています。</p>",
			"min_value": ["-256", "-256", "-256"],
			"max_value": ["256", "256", "256"],
			"parameter_type": "optional",
			"default_value": ["30, 30, 30"],
			"load_priority": ["-1, 134, 135 ;バグで1個読み込まない"]
		},
		{
			"parameter": "AfterImage.PalContrast",
			"value": ["mul_赤, mul_緑, mul_青"],
			"type": ["int", "int", "int"],
			"description": "<p>残像のパレットに指定の色要素を乗算します。例えば、128,128,256とすれば、青っぽくなりますが、同時に黒っぽくもなります。もともと黒い部分は黒いまま。また、省略した場合、青っぽい状態で表示されます。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["120, 120, 220"],
			"load_priority": ["136, 137, 138"]
		},
		{
			"parameter": "AfterImage.PalPostBright",
			"value": ["add2_赤, add2_緑, add2_青"],
			"type": ["int", "int", "int"],
			"description": "<p>残像のパレットに指定の色要素を乗算します。例えば、128,128,256とすれば、青っぽくなりますが、同時に黒っぽくもなります。もともと黒い部分は黒いまま。また、省略した場合、青っぽい状態で表示されます。</p>",
			"min_value": ["-256", "-256", "-256"],
			"max_value": ["256", "256", "256"],
			"parameter_type": "optional",
			"default_value": ["120, 120, 220"],
			"load_priority": ["139, 140, 141"]
		},
		{
			"parameter": "AfterImage.PalAdd",
			"value": ["add_赤, add_緑, add_青"],
			"type": ["int", "int", "int"],
			"description": "<p>2,3,4…番目の残像に、累積して色要素が加算されます。残像をグラデーションさせるときに。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": ["10, 10, 25"],
			"load_priority": ["142, 143, 144"]
		},
		{
			"parameter": "AfterImage.PalMul",
			"value": ["mul_赤, mul_緑, mul_青"],
			"type": ["float", "float", "float"],
			"description": "<p>2,3,4…番目の残像に、累積して色要素が乗算されます。残像をグラデーションさせるときに。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [".65, .65, .75"],
			"load_priority": ["145, 146, 147"]
		},
		{
			"parameter": "Attack.Width",
			"value": ["z1, z2"],
			"type": ["int", "int"],
			"description": "<p>現在、使われておりません。</p>",
			"min_value": [""],
			"max_value": [""],
			"parameter_type": "optional",
			"default_value": [""],
			"load_priority": ["? ,?"]
		},
		{
			"parameter": "ReMapPal",
			"value": ["dst_pal_grp", "dst_pal_item"],
			"type": ["int", "int"],
			"description": "<p>Forces a palette remap of the helper's indexed-color sprites to the specified palette. This parameter is used only if ownpal_flag is non-zero. If dst_pal_grp is -1, this parameter will be ignored.</p>",
			"parameter_type": "optional",
			"default_value": ["-1", "0"],
			"load_priority": ["?", "?"]
		}
	],

	"quote": [
		{"title": "Projectile - M.U.G.E.N wiki", "url": "http://elecbyte.com/wiki/index.php/Projectile"},
		{"title": "Projectile - State Controller", "url": "/redirect/?url=homotaro.s44.xrea.com/pukiwiki/pukiwiki.php?Projectile&protocol=http"},
		{"title": "Projectile - 東方夢幻館", "url": "http://kurogane452.g.ribbon.to/Filefyx/sctrls_main.html#Projectile"},
		{"title": "Projectile - 地球の応接間", "url": "http://www.purple.dti.ne.jp/earth/mugen/statebook/projectile.htm"}
	]
}